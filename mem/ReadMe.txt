									The^day^of^DooM

							Create Date:	09.08.2006
							Full Change:	10.01.2008
							Last Update:	12.01.2008

13.01.2008 (19:24 AM):
		Какво ново? Отново проблеми с malloc... Всъщност видях една голяма грешка в логиката и.
	И разбира се тя е пренаписана. Хубавото е, че стана по-четлива ;) Накратко идеята е:
	1) Заделянето започва от Z = RAMEND - R25:R24
	2) Ако указателя Z достигне таблицата на заделена памет (Heap End) се връща NULL.
	3) След като имаме указател в Z правим проверка дали блока памет започващ от него не се
	застъпва с някой от блоковете заделени досега.
	4)Ако е "чист", се връща Z.
	5) Иначе dec Z и към 2)

13.01.2008 (00:29 PM):
		Все откривам някакви недоразумания в кода на malloc. Упорити гадове, като чернобилски
	хлебарки. Всъщност днес (вече вчера) не ми е ден. Не мога да се съсредоточа, не мога да разпиша
	най-стандартен кода за прехвърляне на байтове в памета... За жалост проблема не е само в загубата
	на тренинг в писането на асм. Но стига толкова оплаквания, че ме чака тестване на кода. И най-вече
	на способност му да се спрявя с разпокъсана памет. След това и да хваща колкото се може по-вече от
	граничните ситоации при който може да възникне омазване на паметта.

12.01.2008 (16:31 AM):
		Бяха отстранени изключително неприятни бъгове в malloc. Около 3 на брой но качествени.
	Първо заделяша с по 1 байт в по-вече, също не можеше да разпофожи нов блок памет във
	фрагментираните пространства. А и не правеше няколко важни проверки.
	Всъщност нищо страшно ;)

12.01.2008 (13:55 AM):
		Промених функцията free. Предишния вариянт просто записваше нула в часта
	съхраняваща адреса на заделения блок. Но по този начин се получаваше голяма
	фрагментация на таблицата а и по-лошото: malloc добавя всеки нов елемент на върха
	на таблицата. А това довеждаше до "теч" на памет.

12.01.2008 (02:55 PM):
		Нямам представа от къде да започна... Всъщност вече започвам да реализирам една
	отдавна планувана идея - добавяне на реален memory manager (MM) към операционата.
	Отсега - няма да завърша скоро задачата - свършиха свободните ученически години, за
	добро или лошо. Но стига овъртания! По същество, текущия файл mem.ams е (не за дълго)
	отделен проект който трябваше да се добави към AVR-OS но поради редица трудности,
	за който ще спомена по-надоло, реализацията на плана се забави. Реално от датата на
	зпочване до 10.01.08 нямаше нищо направено по него. Неприятно - осъзнах, че покрай
	Си-то здравата съм изгубил навиците за писане на ASM. За момента подържа функция за
	заделяне (malloc) и освобождаване (free) на памет. За разлика от MM на 0.72 при който
	се заделяше еденичен блок памет на процес в текущата версия няма подобни "недоразумения".
	Е, за сметка на това има други де... Например минималния препорачителен размер памет
	по време на заделяне е добре да е над 50 байта за да достигнем загуба по малка от 10%.
	От къде идва загубата? Всяко заделено парче памет отговаря 4 байтова структура съхраняваща
	указател към блока памет и рамера му. Неприятното е, че добавянето му към ядрото на
	операционата определено няма да мине безкръвно. Досегашното и разпределяне на паметта
	(младшите адреси за масива на процесите, старшите за блоковете памет) ще е бъде тотално
	променено. Но стига олкова отегчителни писаници :)
	
	

