<html>

<head>
<meta http-equiv="Content-Language" content="bg">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>New Page 1</title>
</head>

<body>

<p>Файловете <span lang="en-us"><a href="../0.70/scr/kernel/task.inc">task.inc</a>
</span>и <span lang="en-us"><a href="../0.70/scr/kernel/api/task-api.inc">task-api.inc</a> </span>са напрактика самия <span lang="en-us">kernel. </span>
Грижат се за управлението на процесите. Най-критичната част в операционата 
система е <b>OSTaskManagerF</b>. Тя е закачена към прекъсването <b>OC0addr</b> и 
се грижи за запазването, зареждането и смяната на процесите. Ако броя им е нула 
изпада в <span lang="en-us">crash. </span>Но с позволени глобални прекъсвания (<span lang="en-us"><b>sei</b>)
</span>с ако има окупирано прекъсване преди старта на ОС-а което създава процес 
да може да се създаде и да се излезе от <span lang="en-us">crash-a.</span> Но 
напрактика това е не желателен работен навик. По-добре да създадем един процес 
по нормалния начин :) В 
началото на <b>OSTaskManagerF </b>имаме код прочитащ и декодиращ съобщенията 
изпратени към операционата и ако съобщението е <span lang="en-us"><b>
THIS_IS_SYSTEM_TASK </b></span>се пропуска запазването на текущия процес. 
Призината е че когато използваме системна функция, например <span lang="en-us">
OSExit, </span>се излиза от процеса, следващия след него заема позицията му в 
таблицата на процесите, но стекови указател остава все още на стария процес. 
Дотука добре но при излизането пт процеса се изпада в безкраен цикъл (докато му 
изтече процесорното време) след който се ако нямаше съощението, че е системен 
процес щеше да се запази позицията му върху процеса който е заел мястото му 
което щеше автоматически да го унищожи. А така имаме преминаване към следващия 
процес.</p>

<p>Няколко думи за съхранението и зареждането на процесите. Когато се извика <b>OSTaskManagerF</b> 
се ползва <span lang="en-us">SP </span>на текущия процес. Той бива запазен в 
структурата на процеса заедно с регистрите (<span lang="en-us">SREG, R0..R31).
</span>След като се намери следващия процес се зарежда неговия стеков указател, 
зареждат му се регистрите и се излиза от <b>OSTaskManagerF </b>с инструкцията
<span lang="en-us"><b>reti</b>.</span></p>
<p>&nbsp;</p>
<p><b>OSInit</b><span lang="en-us"> - </span>инициализира таблицата на 
прекъсванията и операционата система</p>
<p><b>OSRun </b>- за стартиране на ОС. Не приема и връща параметри. Прави <b>jmp 
OSTaskManagerPointOfFirstRun</b> - с цел пропускане на запазването на процеса / 
просто няма какво да се запазва/ и зареждане на първия процес.</p>
<p>&nbsp;</p>

</body>

</html>